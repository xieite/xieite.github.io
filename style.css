/* This is terrible, please don't read */

@import url("https://rsms.me/inter/inter.css");

:root {
	font-family: Inter, sans-serif;
}

* {
	padding: 0;
	margin: 0;
}

html, body {
	width: 100%;
	height: 100%;

	overflow-wrap: break-word;
	overflow: scroll;
	display: flex;
	flex-direction: column;

	background-color: #000000;
	color: #eeeeee;
}

body > * {
	flex-shrink: 0;
}

input {
	display: none;
}

iframe {
	position: absolute;
	top: 0;
	border: 0;
	width: 250px;
	height: 100%;
}

iframe:nth-of-type(1) {
	left: 0;
	z-index: 1000000;
}

iframe:nth-of-type(2) {
	left: calc(100% - 250px);
	z-index: 1000002;
}

body:has(script) {
	padding-top: 25px;
	padding-bottom: 25px;
	padding-left: 25px;
	padding-right: 0;
	width: calc(100% - 25px);
	height: calc(100% - 50px);

	background-color: #000000;
}

pre:has(a[target="_top"]) {
	tab-size: 2;
	white-space: pre;
}

main {
	padding-top: 25px;
	padding-bottom: 100px;
	padding-left: 350px;
	padding-right: 350px;
	flex-grow: 1;

	background-color: #111111;
}

code, blockquote {
	background-color: #000000;
}

blockquote {
	margin: 5px;
	padding: 10px;
	/* width: fit-content; */
}

pre {
	tab-size: 4;
	white-space: pre-wrap;
	word-break: break-all;
}

a {
	text-decoration: none;
	color: inherit;
}

/* TODO: Remove `g` class */

a:not(:has(span:not(.g))):hover, a:not(:has(span:not(.g))):hover *, a:has(span:not(.g)):hover > *, a:has(span:not(.g)):hover > * * {
	text-decoration: underline;
	color: #afafaf;
}

/* a[href^="#"]:not(:has(h3)), a[href^="https://godbolt.org"], body:has(script) > pre > a > span, */ .g {
	color: #afafaf;
}

::-webkit-scrollbar {
	display: none;
}

.blink {
	animation: blink-animation 1s steps(2, start) infinite;
	-webkit-animation: blink-animation 1s steps(2, start) infinite;
}
@keyframes blink-animation {
	to {
		visibility: hidden;
	}
}
@-webkit-keyframes blink-animation {
	to {
		visibility: hidden;
	}
}

@media (max-width: 1200px) {
	main {
		padding-left: 300px;
		padding-right: 50px;
	}

	body:has(iframe[src$=".links.html"]) > main {
		padding-right: 300px;
	}
}

@media (orientation: portrait) or (max-width: 700px) {
	input {
		display: block;
		width: 40px;
		height: 40px;

		position: absolute;
		top: 25px;
	}

	input:nth-of-type(1) {
		left: 25px;
		z-index: 1000001;
	}

	input:nth-of-type(2) {
		right: 25px;
		z-index: 1000003;
	}

	iframe {
		display: none;
	}

	main {
		margin: 0;
		padding-top: 75px;
		padding-bottom: 100px;
		padding-left: 25px;
		padding-right: 25px;
		width: calc(100% - 50px);
	}

	input:nth-of-type(1):checked {
		left: unset;
		right: 25px;
	}

	input:nth-of-type(1):checked ~ input:nth-of-type(2) {
		display: none;
	}

	input:nth-of-type(1):checked ~ iframe:nth-of-type(1) {
		display: block;
		width: 100%;
	}

	input:nth-of-type(2):checked ~ iframe:nth-of-type(2) {
		display: block;
		width: 100%;

		left: 0;
	}
}

w_ { color: #6a6a6a; } /* comments */
k_ { color: #4b92da; } /* keywords */
r_ { color: #ca78e3; } /* control flow */
t_ { color: #85bef7; } /* types */
v_ { color: #c1edff; } /* variables */
c_ { color: #a099ff; } /* concepts */
m_ { color: #63d2c8; } /* namespaces */
f_ { color: #ffeca1; } /* functions */
a_ { color: #bb9569; } /* attributes */
s_ { color: #fc582a; } /* strings */
n_ { color: #d6ffa1; } /* numbers */
p_ { color: #ff48ce; } /* preprocessor */
i_ { color: #ffae00; } /* special */
E_ { color: #ff0000; } /* ERROR */
j_ { color: #ff8026; } /* function-like macro */
o_ { color: #99ffb1; } /* callable object */

/* TODO: Light mode
@media (prefers-color-scheme: light) {
	body {
		background-color: white;
		color: black;
	}
} */
